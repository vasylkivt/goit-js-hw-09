{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAkBC,SAASC,eAAe,cAC1CC,EAAWF,SAASG,cAAc,gBAClCC,EAAUJ,SAASG,cAAc,UACjCE,EAAO,CACXC,KAAMF,EAAQD,cAAc,eAC5BI,MAAOH,EAAQD,cAAc,gBAC7BK,QAASJ,EAAQD,cAAc,kBAC/BM,QAASL,EAAQD,cAAc,kBAC/BO,aAAcN,EAAQD,cAAc,wBAGtC,IAAIQ,EACAC,EAAU,KAId,SAASC,IACPF,EAAe,IAAIG,KAAK,SAASf,EAAgBgB,kBAEjDb,EAASc,YAAc,QACvBjB,EAAgBkB,aAAa,WAAY,IACzCf,EAASgB,oBAAoB,QAASL,GACtCM,EAAAtB,GAASuB,OAAOC,QAAQ,oBAAqB,CAC3CC,cAAc,IAEhBC,IACAX,EAAUY,YAAYD,EAAa,IACnCrB,EAASuB,iBAAiB,QAASC,E,CAGrC,SAASA,IACPP,EAAAtB,GAASuB,OAAOO,KAAK,4CAErBC,cAAchB,GAEdP,EAAKC,KAAKU,YAAc,KACxBX,EAAKE,MAAMS,YAAc,KACzBX,EAAKG,QAAQQ,YAAc,KAC3BX,EAAKI,QAAQO,YAAc,KAC3BX,EAAKK,aAAaM,YAAc,MAEhCd,EAASc,YAAc,QACvBjB,EAAgB8B,gBAAgB,YAEhC3B,EAASgB,oBAAoB,QAASQ,GACtCxB,EAASuB,iBAAiB,QAASZ,E,CAGrC,SAASU,IACP,MAAMjB,KAAEA,EAAIC,MAAEA,EAAKC,QAAEA,EAAOC,QAAEA,EAAOC,aAAEA,GAmBzC,SAAmBoB,GAGjB,MAAMC,EAAS,IACTC,EAAkB,GAATD,EACTE,EAAgB,GAATD,EACPE,EAAa,GAAPD,EAGN3B,EAAO6B,KAAKC,MAAMN,EAAKI,GAEvB3B,EAAQ4B,KAAKC,MAAMN,EAAMI,EAAOD,GAEhCzB,EAAU2B,KAAKC,MAAMN,EAAOI,EAAOD,EAAQD,GAE3CvB,EAAU0B,KAAKC,MAAMN,EAAQI,EAAOD,EAAQD,EAAUD,GACtDrB,EAAeyB,KAAKC,MAAMN,EAAQI,EAAOD,EAAQD,EAAUD,GAEjE,MAAO,C,KAAEzB,E,MAAMC,E,QAAOC,E,QAASC,E,aAASC,E,CArCgB2B,CACtD1B,EAAe,IAAIG,MAEjBH,EAAe,IAAIG,KAAS,EAC9BY,KAIFrB,EAAKC,KAAKU,YAAcsB,EAAehC,EAAM,GAC7CD,EAAKE,MAAMS,YAAcsB,EAAe/B,EAAO,GAC/CF,EAAKG,QAAQQ,YAAcsB,EAAe9B,EAAS,GACnDH,EAAKI,QAAQO,YAAcsB,EAAe7B,EAAS,GACnDJ,EAAKK,aAAaM,YAAcsB,EAAe5B,EAAc,G,CAG/D,SAAS4B,EAAevB,EAAOwB,GAC7B,OAAOxB,EAAMyB,WAAWC,SAASF,EAAQ,I,CAnD3CrC,EAASuB,iBAAiB,QAASZ","sources":["src/js/countdownToNewYear.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst datetimeInputEl = document.getElementById('year-input');\nconst btnStart = document.querySelector('[data-start]');\nconst timerEl = document.querySelector('.timer');\nconst refs = {\n  days: timerEl.querySelector('[data-days]'),\n  hours: timerEl.querySelector('[data-hours]'),\n  minutes: timerEl.querySelector('[data-minutes]'),\n  seconds: timerEl.querySelector('[data-seconds]'),\n  milliseconds: timerEl.querySelector('[data-milliseconds]'),\n};\n\nlet selectedDate;\nlet timerId = null;\n\nbtnStart.addEventListener('click', onStartBtnClick);\n\nfunction onStartBtnClick() {\n  selectedDate = new Date(`01-01-${datetimeInputEl.value} 00:00:00`);\n\n  btnStart.textContent = 'Reset';\n  datetimeInputEl.setAttribute('disabled', '');\n  btnStart.removeEventListener('click', onStartBtnClick);\n  Notiflix.Notify.success('Timer is running!', {\n    clickToClose: true,\n  });\n  updateTimer();\n  timerId = setInterval(updateTimer, 48);\n  btnStart.addEventListener('click', onResetBtnClick);\n}\n\nfunction onResetBtnClick() {\n  Notiflix.Notify.info('The timer is cleared, select a new date.');\n\n  clearInterval(timerId);\n\n  refs.days.textContent = '00';\n  refs.hours.textContent = '00';\n  refs.minutes.textContent = '00';\n  refs.seconds.textContent = '00';\n  refs.milliseconds.textContent = '000';\n\n  btnStart.textContent = 'Start';\n  datetimeInputEl.removeAttribute('disabled');\n\n  btnStart.removeEventListener('click', onResetBtnClick);\n  btnStart.addEventListener('click', onStartBtnClick);\n}\n\nfunction updateTimer() {\n  const { days, hours, minutes, seconds, milliseconds } = convertMs(\n    selectedDate - new Date()\n  );\n  if (selectedDate - new Date() < 0) {\n    onResetBtnClick();\n    return;\n  }\n\n  refs.days.textContent = addLeadingZero(days, 2);\n  refs.hours.textContent = addLeadingZero(hours, 2);\n  refs.minutes.textContent = addLeadingZero(minutes, 2);\n  refs.seconds.textContent = addLeadingZero(seconds, 2);\n  refs.milliseconds.textContent = addLeadingZero(milliseconds, 3);\n}\n\nfunction addLeadingZero(value, amount) {\n  return value.toString().padStart(amount, '0');\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n  const milliseconds = Math.floor((((ms % day) % hour) % minute) % second);\n\n  return { days, hours, minutes, seconds, milliseconds };\n}\n"],"names":["$7Y9D8","parcelRequire","$6d162f0d987d2910$var$datetimeInputEl","document","getElementById","$6d162f0d987d2910$var$btnStart","querySelector","$6d162f0d987d2910$var$timerEl","$6d162f0d987d2910$var$refs","days","hours","minutes","seconds","milliseconds","$6d162f0d987d2910$var$selectedDate","$6d162f0d987d2910$var$timerId","$6d162f0d987d2910$var$onStartBtnClick","Date","value","textContent","setAttribute","removeEventListener","$parcel$interopDefault","Notify","success","clickToClose","$6d162f0d987d2910$var$updateTimer","setInterval","addEventListener","$6d162f0d987d2910$var$onResetBtnClick","info","clearInterval","removeAttribute","ms","second","minute","hour","day","Math","floor","$6d162f0d987d2910$var$convertMs","$6d162f0d987d2910$var$addLeadingZero","amount","toString","padStart"],"version":3,"file":"countdownToNewYear.429f6ebd.js.map"}