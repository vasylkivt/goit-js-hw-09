{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,SAChCC,EAAYH,EAAOE,cAAc,UA0CvC,SAASE,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACLC,KAAKC,SAAW,GAGpCC,YAAW,WACTJ,EAAQ,CAAEH,WAAUC,S,GACnBA,GAEHM,YAAW,WACTH,EAAO,CAAEJ,WAAUC,S,GAClBA,E,IA/CTN,EAAOa,iBAAiB,UAExB,SAAkBC,GAChBA,EAAEC,iBACFZ,EAAUa,aAAa,WAAY,IAYnC,IAVA,IAEmBC,EAAfH,EAAEI,cADJC,SAAYC,EAAKH,EAALX,MAAOe,EAAMJ,EAANI,OAAQC,EAAIL,EAAJK,KAEvBC,EAAaC,OAAOJ,EAAMK,OAC1BC,EAAcF,OAAOH,EAAOI,OAC5BE,EAAYH,OAAOF,EAAKG,OAE1BG,EAAeL,EACfM,EAAe,EAEVC,EAAI,EAAGA,EAAIJ,EAAaI,IAC/B1B,EAAcyB,EAAcD,GACzBG,MAAK,SAAAC,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MACjB2B,EAAAnC,GAASoC,OAAOC,QACd,uBAAwCC,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,M,IAGjD+B,OAAM,SAAAL,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MAClB2B,EAAAnC,GAASoC,OAAOI,QACd,sBAAuCF,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,M,IAGhDiC,SAAQ,WACPpC,EAAUqC,gBAAgB,W,IAE9BX,GAAgB,EAChBD,GAAgBD,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\nconst formBtnEl = formEl.querySelector('button');\n\n// formEl.elements.delay.value = 1100;\n// formEl.elements.step.value = 1500;\n// formEl.elements.amount.value = 7;\n\nformEl.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  formBtnEl.setAttribute('disabled', '');\n\n  const {\n    elements: { delay, amount, step },\n  } = e.currentTarget;\n  const delayValue = Number(delay.value);\n  const amountValue = Number(amount.value);\n  const stepValue = Number(step.value);\n\n  let promiseDelay = delayValue;\n  let promiseCount = 1;\n\n  for (let i = 0; i < amountValue; i++) {\n    createPromise(promiseCount, promiseDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      })\n      .finally(() => {\n        formBtnEl.removeAttribute('disabled');\n      });\n    promiseCount += 1;\n    promiseDelay += stepValue;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    if (shouldResolve) {\n      setTimeout(() => {\n        resolve({ position, delay });\n      }, delay);\n    } else {\n      setTimeout(() => {\n        reject({ position, delay });\n      }, delay);\n    }\n  });\n}\n\n// formEl.addEventListener('submit', function (e) {\n//   e.preventDefault();\n\n//   const {\n//     elements: { delay, amount, step },\n//   } = e.currentTarget;\n\n//   let delays = delay.value;\n\n//   for (let i = 1; i <= amount.value; i++) {\n//     setTimeout(createPromise, delays, i, delays);\n//     delays = +delays + +step.value;\n//     console.log('delays:', delays);\n//   }\n// });\n\n// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n\n//   if (shouldResolve) {\n//     Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   } else {\n//     Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n//   }\n// }\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$formBtnEl","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","Math","random","setTimeout","addEventListener","e","preventDefault","setAttribute","_elements","currentTarget","elements","delay1","amount","step","delayValue","Number","value","amountValue","stepValue","promiseDelay","promiseCount","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","finally","removeAttribute"],"version":3,"file":"03-promises.2578585d.js.map"}